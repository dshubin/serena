<step-type name="Bootstrap">
  <description> This will will install chef on the given client.</description>
  <properties>
    <property name="target" required="true">  
      <property-ui type="textBox" label="FQDN or IP address" description="FQDN or IP address of target computer."/>
    </property>      
    <property name="forwarding">  
      <property-ui type="checkBox" label="SSH forwarding" description="Check to indaicated that SSh agent forwarding is enabled."/>
    </property>      
    <property name="proxyUrl">  
      <property-ui type="textBox" label="Proxy Url" description="The proxy server for the node that is the target of a bootstrap operation."/>
    </property>      
    <property name="version">  
      <property-ui type="textBox" label="Chef Version" description="The version of the chef-client to install."/>
    </property>      
    <property name="distro">  
      <property-ui type="textBox" label="Distributions" description="The template file to be used during a bootstrap operation. The following distributions are supported: chef-full (the default bootstrap), centos5-gems, fedora13-gems, ubuntu10.04-gems, ubuntu10.04-apt, ubuntu12.04-gems, and the name of a custom bootstrap template file. When this option is used, Knife will search for the template file in the following order: the bootstrap/ folder in the current working directory, the bootstrap/ folder in the chef-repo, the bootstrap/ folder in the ~/.chef/ directory, or a default bootstrap file. Do not use the --template-file option when --distro is specified."/>
    </property>      
    <property name="gateway">  
      <property-ui type="textBox" label="SSH Gateway" description="The SSH tunnel or gateway that is used to run a bootstrap action on a machine that is not accessible from the workstation."/>
    </property>      
    <property name="hint">  
      <property-ui type="textBox" label="Hint" description="HINT_NAME[=HINT_FILE] An Ohai hint to be set on the target of the bootstrap. The hint is contained in a file and is formatted as JSON: {'attribute':'value','attribute':'value'...}. HINT_NAME is the name of the hint and HINT_FILE is the name of the hint file located at /etc/chef/ohai/hints/HINT_FILE.json. Use multiple --hint options in the command to specify multiple hints."/>
    </property>      
    <property name="identity">  
      <property-ui type="textBox" label="Identity File" description="The SSH identity file used for authentication. Key-based authentication is recommended."/>
    </property>      
    <property name="jsonAttr">  
      <property-ui type="textAreaBox" label="Json Attributes" description="A JSON string that is added to the first run of a chef-client."/>
    </property>      
    <property name="name">  
      <property-ui type="textBox" label="Node Name" description="The name of the node."/>
    </property>      
    <property name="hostKeyVerify">  
      <property-ui type="checkBox" default-value="true" label="Host key Verify" description="Unselected to turn off host key verify (Flag of --no-host-key-verify)"/>
    </property>      
    <property name="port">  
      <property-ui type="textBox" label="SSH Port" description="The port SSH uses."/>
    </property>      
    <property name="password">  
      <property-ui type="secureBox" label="SSH Password" description="The SSH password. This can be used to pass the password directly on the command line. If this option is not specified (and a password is required) Knife will prompt for the password."/>
    </property>      
    <property name="prerelease">  
      <property-ui type="checkBox" label="Prerelease" description="Indicates that pre-release gems should be installed."/>
    </property>      
    <property name="runList">  
      <property-ui type="textBox" label="Run List" description="A comma-separated list of roles and/or recipes to be applied."/>
    </property>      
    <property name="secret">  
      <property-ui type="textAreaBox" label="Secret" description="The encryption key that is used for values contained within a data bag item."/>
    </property>      
    <property name="secretFile">  
      <property-ui type="textBox" label="Secrete File" description="The path to the file that contains the encryption key."/>
    </property>      
    <property name="sudo">
      <property-ui type="checkBox" label="Sudo" description="Check to have bootstrap operation execute using sudo."/>
    </property>      
    <property name="sudoPassword">
      <property-ui type="secureBox" label="Sudo Password" description="Enter sudo password if Use Sudo Password is not marked and Sudo is marked."/>
    </property>      
    <property name="template">
      <property-ui type="textBox" label="Template" description="The path to a template file that will be used during a bootstrap operation. Do not use the --distro option when --template-file is specified."/>
    </property>      
    <property name="useSudoPassword">
      <property-ui type="checkBox" label="Use Sudo Password" description="Indicates that a bootstrap operation is done using sudo, with the password specified by the -P (or --ssh-password) option."/>
    </property>      
    <property name="user">
      <property-ui type="textBox" label="User Name" description="The SSH user name."/>
    </property>      
  </properties>
  <post-processing><![CDATA[
      if (properties.get("exitCode") != 0) {
          properties.put("Status", "Failure");
      }
      else {
          properties.put("Status", "Success");
      }
   ]]></post-processing>

  <command program="${GROOVY_HOME}/bin/groovy">
    <arg file="bulkDeleteClient.groovy"/>
    <arg file="${PLUGIN_INPUT_PROPS}"/>
    <arg file="${PLUGIN_OUTPUT_PROPS}"/>
  </command>
  
</step-type>
